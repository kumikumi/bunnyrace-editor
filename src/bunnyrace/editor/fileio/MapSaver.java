/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package bunnyrace.editor.fileio;

import bunnyrace.editor.Koordinaatit;
import java.awt.Image;
import java.awt.image.BufferedImage;
import java.io.File;
import java.io.FileWriter;
import java.io.IOException;
import java.util.Date;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.imageio.ImageIO;

/**
 *
 * @author kumikumi
 */
public class MapSaver {

    public void saveMapAs(Pelitaso pelitaso, File polku) {
        try {
            talletaParametrit(polku, pelitaso);
            talletaHerneet(polku, pelitaso);
            talletaMansikat(polku, pelitaso);
            talletaPommit(polku, pelitaso);
            talletaKuvat(polku, pelitaso);
            pelitaso.setPolku(polku);
        } catch (IOException ex) {
            Logger.getLogger(MapSaver.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    public void saveMap(Pelitaso pelitaso) {
        saveMapAs(pelitaso, pelitaso.getPolku());
    }

    private String viesti() {
        return ("#generated by Bunnyrace-editor on " + new Date() + "\r\n");
    }

    public void talletaParametrit(File polku, Pelitaso pelitaso) throws IOException {
        File tiedosto = new File(polku.getPath() + "/map.txt");
        tiedosto.createNewFile();
        FileWriter kirjoittaja = new FileWriter(tiedosto, false);
        kirjoittaja.write(viesti());
        kirjoittaja.write("skaala:" + pelitaso.getSkaala() + "\r\n");
        kirjoittaja.write("kuvia:" + pelitaso.getKuvienlkm() + "\r\n");
        kirjoittaja.write("kuvanleveys:" + pelitaso.getKuvanleveys() + "\r\n");
        kirjoittaja.write("auto:" + pelitaso.getAuto().x + ";" + pelitaso.getAuto().y + "\r\n");
        kirjoittaja.close();
    }

    public void talletaHerneet(File polku, Pelitaso pelitaso) throws IOException {
        File tiedosto = new File(polku.getPath() + "/herneet.txt");
        tiedosto.createNewFile();
        FileWriter kirjoittaja = new FileWriter(tiedosto, false);
        kirjoittaja.write(viesti());
        for (Koordinaatit k : pelitaso.getHerneet()) {
            kirjoittaja.write(k.x + ";" + k.y + "\r\n");
        }
        kirjoittaja.close();
    }

    public void talletaMansikat(File polku, Pelitaso pelitaso) throws IOException {
        
        File tiedosto = new File(polku.getPath() + "/mansikat.txt");
        tiedosto.createNewFile();
        FileWriter kirjoittaja = new FileWriter(tiedosto, false);
        kirjoittaja.write(viesti());
        for (Koordinaatit k : pelitaso.getMansikat()) {
            kirjoittaja.write(k.x + ";" + k.y + "\r\n");
        }
        kirjoittaja.close();
    }

    public void talletaPommit(File polku, Pelitaso pelitaso) throws IOException {
        File tiedosto = new File(polku.getPath() + "/pommit.txt");
        tiedosto.createNewFile();
        FileWriter kirjoittaja = new FileWriter(tiedosto, false);
        kirjoittaja.write(viesti());
        for (Koordinaatit k : pelitaso.getPommit()) {
            kirjoittaja.write(k.x + ";" + k.y + "\r\n");
        }
        kirjoittaja.close();
    }

    public void talletaKuvat(File polku, Pelitaso pelitaso) throws IOException {
        File kuvahakemisto = new File(polku.getPath()+"/img");
        kuvahakemisto.mkdir();
        Image[] taulukko = pelitaso.getMaisema();
        String tiedostopolku = "";
        File output;
        for (int i = 0; i < taulukko.length; i++) {
            if (i < 10) {
                tiedostopolku = polku.getPath() + "/img/img_0" + i + ".png";
            } else {
                tiedostopolku = polku.getPath() + "/img/img_" + i + ".png";
            }
            output = new File(tiedostopolku);
            output.createNewFile();
            ImageIO.write((BufferedImage) taulukko[i], "png", output);
        }
    }
}